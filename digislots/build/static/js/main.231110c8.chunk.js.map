{"version":3,"sources":["models/Digimon.ts","models/EvolutionRequirements.ts","models/DigimonList.ts","components/DigiSlotMachine.tsx","index.tsx"],"names":["Level","DigimonName","Digimon","name","level","evolutionRequirements","evolutionPath","digimonBonus","EvolutionRequirements","hp","mp","offense","defense","speed","brains","care","weight","discipline","happiness","battles","techs","minCare","minBattles","digimonList","Botamon","Fresh","Koromon","Sukamon","Poyomon","Tokomon","Punimon","Tsunomon","Yuramon","Tanemon","InTraining","Agumon","Gabumon","Kunemon","Palmon","Betamon","Patamon","Biyomon","Elecmon","Penguinmon","Rookie","Greymon","Meramon","Birdramon","Centarumon","Monochromon","Tyrannomon","Numemon","Nanimon","Seadramon","Whamon","Shellmon","Coelamon","Airdramon","Kokatorimon","Unimon","Kabuterimon","Leomon","Angemon","Bakemon","Drimogemon","Ogremon","Garurumon","Kuwagamon","Vegiemon","Ninjamon","Frigimon","Mojyamon","Champion","Megadramon","Phoenixmon","Vademon","Andromon","Devimon","SkullGreymon","Giromon","MegaSeadramon","MetalGreymon","MetalMamemon","Mamemon","HKabuterimon","Piximon","Digitamamon","Monzaemon","Etemon","Ultimate","getDigimon","dn","find","d","getSpecialDigimonInfo","StyledPanes","styled","div","StyledPane","StyledSelect","Form","Select","StyledButton","Button","FormCheck","Check","StyledIcon","img","InfoCard","Card","StyledInput","Control","DigiSlotMachine","useState","careLabel","setCareLabel","battlesLabel","setBattlesLabel","currentDigimon","setCurrentDigimon","rolledDigimon","setRolledDigimon","omitErrors","setOmitErrors","omittedDigimon","setOmittedDigimon","showOmitTags","setShowOmitTags","showBonusDigimonText","setShowBonusDigimonText","bonusText","setBonusText","showSpecialDigivolutions","setShowSpecialDigivolutions","showSpoilers","setShowSpoilers","Alert","variant","length","Table","striped","bordered","hover","src","style","width","className","value","onChange","e","target","map","digi","onClick","potentialEvolutions","filter","includes","randomDigi","Math","floor","random","specialDigiInfo","console","log","rollDigimon","type","id","label","prev","placeholder","onBlur","values","split","badValues","goodValues","trimmed","trim","Object","push","handleOmit","join","body","href","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.231110c8.chunk.js","sourcesContent":["import EvolutionRequirements from \"./EvolutionRequirements\";\n\nexport enum Level {\n    Fresh,\n    InTraining,\n    Rookie,\n    Champion,\n    Ultimate\n}\n\nexport enum DigimonName {\n    Botamon = \"Botamon\",\n    Poyomon = \"Poyomon\",\n    Punimon = \"Punimon\",\n    Yuramon = \"Yuramon\",\n    Koromon = \"Koromon\",\n    Tanemon = \"Tanemon\",\n    Tokomon = \"Tokomon\",\n    Tsunomon = \"Tsunomon\",\n    Agumon = \"Agumon\",\n    Betamon = \"Betamon\",\n    Biyomon = \"Biyomon\",\n    Elecmon = \"Elecmon\",\n    Gabumon = \"Gabumon\",\n    Kunemon = \"Kunemon\",\n    Palmon = \"Palmon\",\n    Patamon = \"Patamon\",\n    Penguinmon = \"Penguinmon\",\n    Airdramon = \"Airdramon\",\n    Angemon = \"Angemon\",\n    Bakemon = \"Bakemon\",\n    Birdramon = \"Birdramon\",\n    Centarumon = \"Centarumon\",\n    Coelamon = \"Coelamon\",\n    Devimon = \"Devimon\",\n    Drimogemon = \"Drimogemon\",\n    Frigimon = \"Frigimon\",\n    Garurumon = \"Garurumon\",\n    Greymon = \"Greymon\",\n    Kabuterimon = \"Kabuterimon\",\n    Kokatorimon = \"Kokatorimon\",\n    Kuwagamon = \"Kuwagamon\",\n    Leomon = \"Leomon\",\n    Meramon = \"Meramon\",\n    Mojyamon = \"Mojyamon\",\n    Monochromon = \"Monochromon\",\n    Nanimon = \"Nanimon\",\n    Ninjamon = \"Ninjamon\",\n    Numemon = \"Numemon\",\n    Ogremon = \"Ogremon\",\n    Seadramon = \"Seadramon\",\n    Shellmon = \"Shellmon\",\n    Sukamon = \"Sukamon\",\n    Tyrannomon = \"Tyrannomon\",\n    Unimon = \"Unimon\",\n    Vegiemon = \"Vegiemon\",\n    Whamon = \"Whamon\",\n    Andromon = \"Andromon\",\n    Digitamamon = \"Digitamamon\",\n    Etemon = \"Etemon\",\n    Giromon = \"Giromon\",\n    HKabuterimon = \"HKabuterimon\",\n    Mamemon = \"Mamemon\",\n    Megadramon = \"Megadramon\",\n    MegaSeadramon = \"MegaSeadramon\",\n    MetalGreymon = \"MetalGreymon\",\n    MetalMamemon = \"MetalMamemon\",\n    Monzaemon = \"Monzaemon\",\n    Phoenixmon = \"Phoenixmon\",\n    Piximon = \"Piximon\",\n    SkullGreymon = \"SkullGreymon\",\n    Vademon = \"Vademon\",\n}\n\nexport class Digimon {\n    constructor(\n        public readonly name: DigimonName,\n        public readonly level: Level,\n        public readonly evolutionRequirements: EvolutionRequirements,\n        public readonly evolutionPath: Array<DigimonName>,\n        public readonly digimonBonus?: DigimonName,\n        ) {\n    }\n}","export default class EvolutionRequirements {\n    constructor(\n        public readonly hp: number,\n        public readonly mp: number,\n        public readonly offense: number,\n        public readonly defense: number,\n        public readonly speed: number,\n        public readonly brains: number,\n        public readonly care: number,\n        public readonly weight: number,\n        public readonly discipline: number,\n        public readonly happiness: number,\n        public readonly battles: number,\n        public readonly techs: number,\n        public readonly minCare: boolean,\n        public readonly minBattles: boolean,\n    ) {\n    }\n}\n","import EvolutionRequirements from \"./EvolutionRequirements\";\nimport { Digimon, DigimonName, Level } from \"./Digimon\";\n\nexport const digimonList = [\n    // Botamon\n    new Digimon(\n        DigimonName.Botamon,\n        Level.Fresh,\n        new EvolutionRequirements(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, false, false), \n        [DigimonName.Koromon, DigimonName.Sukamon]\n    ),\n    // Poyomon\n    new Digimon(\n        DigimonName.Poyomon,\n        Level.Fresh,\n        new EvolutionRequirements(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, false, false), \n        [DigimonName.Tokomon, DigimonName.Sukamon]\n    ),\n    // Punimon\n    new Digimon(\n        DigimonName.Punimon,\n        Level.Fresh,\n        new EvolutionRequirements(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, false, false), \n        [DigimonName.Tsunomon, DigimonName.Sukamon]\n    ),\n    // Yuramon\n    new Digimon(\n        DigimonName.Yuramon,\n        Level.Fresh,\n        new EvolutionRequirements(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, false, false), \n        [DigimonName.Tanemon, DigimonName.Sukamon]\n    ),\n\n    // Koromon\n    new Digimon(\n        DigimonName.Koromon,\n        Level.InTraining,\n        new EvolutionRequirements(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, false, false), \n        [DigimonName.Agumon, DigimonName.Gabumon, DigimonName.Kunemon, DigimonName.Sukamon]\n    ),\n    // Tanemon\n    new Digimon(\n        DigimonName.Tanemon,\n        Level.InTraining,\n        new EvolutionRequirements(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, false, false), \n        [DigimonName.Palmon, DigimonName.Betamon, DigimonName.Kunemon, DigimonName.Sukamon]\n    ),\n    // Tokomon\n    new Digimon(\n        DigimonName.Tokomon,\n        Level.InTraining,\n        new EvolutionRequirements(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, false, false), \n        [DigimonName.Patamon, DigimonName.Biyomon, DigimonName.Kunemon, DigimonName.Sukamon]\n    ),\n    // Tsunomon\n    new Digimon(\n        DigimonName.Tsunomon,\n        Level.InTraining,\n        new EvolutionRequirements(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, false, false), \n        [DigimonName.Elecmon, DigimonName.Penguinmon, DigimonName.Kunemon, DigimonName.Sukamon]\n    ),\n    \n    // Agumon\n    new Digimon(\n        DigimonName.Agumon,\n        Level.Rookie,\n        new EvolutionRequirements(0, 1000, 0, 0, 0, 0, 3, 20, 0, 50, -1, 28, false, false), \n        [DigimonName.Greymon, DigimonName.Meramon, DigimonName.Birdramon, DigimonName.Centarumon, DigimonName.Monochromon, DigimonName.Tyrannomon, DigimonName.Numemon, DigimonName.Nanimon, DigimonName.Sukamon]\n    ),\n    // Betamon\n    new Digimon(\n        DigimonName.Betamon,\n        Level.Rookie,\n        new EvolutionRequirements(10, 10, 0, 1, 0, 0, 0, 15, 0, 0, -2, 0, false, false),\n        [DigimonName.Seadramon, DigimonName.Whamon, DigimonName.Shellmon, DigimonName.Coelamon, DigimonName.Numemon, DigimonName.Nanimon, DigimonName.Sukamon],\n        /* Bonus */ DigimonName.Tanemon, \n    ),\n    // Biyomon\n    new Digimon(\n        DigimonName.Biyomon,\n        Level.Rookie,\n        new EvolutionRequirements(0, 10, 0, 1, 1, 0, 0, 15, 0, 0, -2, 0, false, false), \n        [DigimonName.Birdramon, DigimonName.Airdramon, DigimonName.Kokatorimon, DigimonName.Unimon, DigimonName.Kabuterimon, DigimonName.Numemon, DigimonName.Nanimon, DigimonName.Sukamon],\n        /* Bonus */ DigimonName.Tokomon\n    ),\n    // Elecmon\n    new Digimon(\n        DigimonName.Elecmon,\n        Level.Rookie,\n        new EvolutionRequirements(10, 0, 1, 0, 1, 0, 0, 15, 0, 0, -2, 0, false, false), \n        [DigimonName.Leomon, DigimonName.Angemon, DigimonName.Bakemon, DigimonName.Kokatorimon, DigimonName.Numemon, DigimonName.Nanimon, DigimonName.Sukamon],\n        /* Bonus */ DigimonName.Tsunomon\n    ),\n    // Gabumon\n    new Digimon(\n        DigimonName.Gabumon,\n        Level.Rookie,\n        new EvolutionRequirements(0, 0, 0, 1, 1, 1, 0, 15, 0, 0, -2, 0, false, false), \n        [DigimonName.Centarumon, DigimonName.Monochromon, DigimonName.Drimogemon, DigimonName.Tyrannomon, DigimonName.Ogremon, DigimonName.Garurumon, DigimonName.Numemon, DigimonName.Nanimon, DigimonName.Sukamon],\n        /* Bonus */ DigimonName.Koromon\n    ),\n    // Kunemon\n    new Digimon(\n        DigimonName.Kunemon,\n        Level.Rookie,\n        new EvolutionRequirements(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, false, false), \n        [DigimonName.Bakemon, DigimonName.Kabuterimon, DigimonName.Kuwagamon, DigimonName.Vegiemon, DigimonName.Numemon, DigimonName.Nanimon, DigimonName.Sukamon]\n    ),\n    // Palmon\n    new Digimon(\n        DigimonName.Palmon,\n        Level.Rookie,\n        new EvolutionRequirements(0, 10, 0, 0, 1, 1, 0, 15, 0, 0, -2, 0, false, false), \n        [DigimonName.Kuwagamon, DigimonName.Vegiemon, DigimonName.Ninjamon, DigimonName.Whamon, DigimonName.Coelamon, DigimonName.Numemon, DigimonName.Nanimon, DigimonName.Sukamon],\n        /* Bonus */ DigimonName.Tanemon\n    ),\n    // Patamon\n    new Digimon(\n        DigimonName.Patamon,\n        Level.Rookie,\n        new EvolutionRequirements(10, 0, 1, 0, 0, 1, 0, 15, 0, 0, -2, 0, false, false), \n        [DigimonName.Drimogemon, DigimonName.Tyrannomon, DigimonName.Ogremon, DigimonName.Leomon, DigimonName.Angemon, DigimonName.Unimon, DigimonName.Numemon, DigimonName.Nanimon, DigimonName.Sukamon],\n        /* Bonus */ DigimonName.Tokomon\n    ),\n    // Penguinmon\n    new Digimon(\n        DigimonName.Penguinmon,\n        Level.Rookie,\n        new EvolutionRequirements(0, 10, 0, 1, 0, 1, 0, 15, 0, 0, -2, 0, false, false), \n        [DigimonName.Whamon, DigimonName.Shellmon, DigimonName.Garurumon, DigimonName.Frigimon, DigimonName.Mojyamon, DigimonName.Numemon, DigimonName.Nanimon, DigimonName.Sukamon],\n        /* Bonus */ DigimonName.Tsunomon\n    ),\n    // Airdramon\n    new Digimon(\n        DigimonName.Airdramon,\n        Level.Champion,\n        new EvolutionRequirements(10, 10, 1, 0, 0, 0, 0, 15, 0, 0, -1, 0, false, false), \n        [DigimonName.Megadramon, DigimonName.Phoenixmon, DigimonName.Vademon, DigimonName.Sukamon],\n        /* Bonus */ DigimonName.Koromon\n    ),\n    // Angemon\n    new Digimon(\n        DigimonName.Angemon,\n        Level.Champion,\n        new EvolutionRequirements(2000, 4000, 200, 400, 200, 400, 5, 40, 95, 0, 30, 30, true, false), \n        [DigimonName.Andromon, DigimonName.Phoenixmon, DigimonName.Devimon, DigimonName.Vademon, DigimonName.Sukamon]\n    ),\n    // Bakemon\n    new Digimon(\n        DigimonName.Bakemon,\n        Level.Champion,\n        new EvolutionRequirements(0, 1000, 0, 0, 0, 100, 0, 20, 0, 0, -1, 35, true, false), \n        [DigimonName.SkullGreymon, DigimonName.Giromon, DigimonName.Vademon, DigimonName.Sukamon],\n        /* Bonus */ DigimonName.Patamon\n    ),\n    // Birdramon\n    new Digimon(\n        DigimonName.Birdramon,\n        Level.Champion,\n        new EvolutionRequirements(0, 0, 0, 0, 100, 0, 3, 20, 0, 0, -1, 35, false, false), \n        [DigimonName.Phoenixmon, DigimonName.Vademon, DigimonName.Sukamon],\n        /* Bonus */ DigimonName.Biyomon\n    ),\n    // Centarumon\n    new Digimon(\n        DigimonName.Centarumon,\n        Level.Champion,\n        new EvolutionRequirements(0, 0, 0, 0, 0, 100, 3, 30, 60, 0, -1, 28, true, false), \n        [DigimonName.Andromon, DigimonName.Giromon, DigimonName.Vademon, DigimonName.Sukamon]\n    ),\n    // Coelamon\n    new Digimon(\n        DigimonName.Coelamon,\n        Level.Champion,\n        new EvolutionRequirements(0, 0, 0, 100, 0, 0, 3, 30, 0, 0, 5, 35, false, true), \n        [DigimonName.MegaSeadramon, DigimonName.Vademon, DigimonName.Sukamon]\n    ),\n    // Devimon\n    new Digimon(\n        DigimonName.Devimon,\n        Level.Champion,\n        new EvolutionRequirements(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, false, false), \n        [DigimonName.SkullGreymon, DigimonName.Megadramon, DigimonName.Vademon, DigimonName.Sukamon]\n    ),\n    // Drimogemon\n    new Digimon(\n        DigimonName.Drimogemon,\n        Level.Champion,\n        new EvolutionRequirements(0, 0, 100, 0, 0, 0, 3, 40, 0, 50, -1, 28, false, false), \n        [DigimonName.MetalGreymon, DigimonName.Vademon, DigimonName.Sukamon]\n    ),\n    // Frigimon\n    new Digimon(\n        DigimonName.Frigimon,\n        Level.Champion,\n        new EvolutionRequirements(0, 1000, 0, 0, 0, 100, 5, 30, 0, 50, -1, 28, true, false), \n        [DigimonName.MetalMamemon, DigimonName.Mamemon, DigimonName.Vademon, DigimonName.Sukamon]\n    ),\n    // Garurumon\n    new Digimon(\n        DigimonName.Garurumon,\n        Level.Champion,\n        new EvolutionRequirements(0, 1000, 0, 0, 100, 0, 1, 30, 90, 0, -1, 28, true, false), \n        [DigimonName.SkullGreymon, DigimonName.MegaSeadramon, DigimonName.Vademon, DigimonName.Sukamon]\n    ),\n    // Greymon\n    new Digimon(\n        DigimonName.Greymon,\n        Level.Champion,\n        new EvolutionRequirements(0, 0, 100, 100, 100, 100, 1, 30, 90, 0, -1, 35, true, false), \n        [DigimonName.MetalGreymon, DigimonName.SkullGreymon, DigimonName.Vademon, DigimonName.Sukamon]\n    ),\n    // Kabuterimon\n    new Digimon(\n        DigimonName.Kabuterimon,\n        Level.Champion,\n        new EvolutionRequirements(1000, 1000, 100, 0, 100, 0, 1, 30, 0, 0, -1, 35, true, false), \n        [DigimonName.HKabuterimon, DigimonName.MetalMamemon, DigimonName.Vademon, DigimonName.Sukamon],\n        /* Bonus */ DigimonName.Kunemon\n    ),\n    // Kokatorimon\n    new Digimon(\n        DigimonName.Kokatorimon,\n        Level.Champion,\n        new EvolutionRequirements(1000, 0, 0, 0, 0, 0, 3, 30, 0, 0, -1, 28, false, false), \n        [DigimonName.Phoenixmon, DigimonName.Piximon, DigimonName.Vademon, DigimonName.Sukamon],\n        /* Bonus */ DigimonName.Biyomon\n    ),\n    // Kuwagamon\n    new Digimon(\n        DigimonName.Kuwagamon,\n        Level.Champion,\n        new EvolutionRequirements(1000, 1000, 100, 0, 100, 0, 5, 30, 0, 0, -1, 28, false, false), \n        [DigimonName.HKabuterimon, DigimonName.Piximon, DigimonName.Vademon, DigimonName.Sukamon],\n        /* Bonus */ DigimonName.Kunemon // Requires \n    ),\n    // Leomon\n    new Digimon(\n        DigimonName.Leomon,\n        Level.Champion,\n        new EvolutionRequirements(0, 0, 100, 0, 100, 100, 1, 20, 0, 0, 10, 35, true, false), \n        [DigimonName.Andromon, DigimonName.Mamemon, DigimonName.Vademon, DigimonName.Sukamon]\n    ),\n    // Meramon\n    new Digimon(\n        DigimonName.Meramon,\n        Level.Champion,\n        new EvolutionRequirements(0, 0, 100, 0, 0, 0, 5, 20, 0, 0, 10, 28, false, false), \n        [DigimonName.MetalGreymon, DigimonName.Andromon, DigimonName.Vademon, DigimonName.Sukamon]\n    ),\n    // Mojyamon\n    new Digimon(\n        DigimonName.Mojyamon,\n        Level.Champion,\n        new EvolutionRequirements(1000, 0, 0, 0, 0, 0, 5, 20, 0, 0, 5, 28, false, true), \n        [DigimonName.SkullGreymon, DigimonName.Mamemon, DigimonName.Vademon, DigimonName.Sukamon]\n    ),\n    // Monochromon\n    new Digimon(\n        DigimonName.Monochromon,\n        Level.Champion,\n        new EvolutionRequirements(1000, 0, 0, 100, 0, 100, 3, 40, 0, 0, 5, 35, true, true), \n        [DigimonName.MetalGreymon, DigimonName.MetalMamemon, DigimonName.Vademon, DigimonName.Sukamon]\n    ),\n    // Nanimon\n    new Digimon(\n        DigimonName.Nanimon,\n        Level.Champion,\n        new EvolutionRequirements(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, false, false), \n        [DigimonName.Digitamamon, DigimonName.Vademon, DigimonName.Sukamon]\n    ),\n    // Ninjamon\n    new Digimon(\n        DigimonName.Ninjamon,\n        Level.Champion,\n        new EvolutionRequirements(0, 1000, 100, 0, 100, 0, 1, 10, 0, 0, 15, 35, true, false), \n        [DigimonName.Piximon, DigimonName.MetalMamemon, DigimonName.Mamemon, DigimonName.Vademon, DigimonName.Sukamon]\n    ),\n    // Numemon\n    new Digimon(\n        DigimonName.Numemon,\n        Level.Champion,\n        new EvolutionRequirements(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, false, false), \n        [DigimonName.Monzaemon, DigimonName.Vademon, DigimonName.Sukamon]\n    ),\n    // Ogremon\n    new Digimon(\n        DigimonName.Ogremon,\n        Level.Champion,\n        new EvolutionRequirements(1000, 0, 100, 0, 0, 0, 5, 30, 0, 0, 15, 35, false, false), \n        [DigimonName.Andromon, DigimonName.Giromon, DigimonName.Vademon, DigimonName.Sukamon]\n    ),\n    // Seadramon\n    new Digimon(\n        DigimonName.Seadramon,\n        Level.Champion,\n        new EvolutionRequirements(1000, 1000, 0, 0, 0, 0, 3, 30, 0, 0, 5, 28, false, true), \n        [DigimonName.Megadramon, DigimonName.MegaSeadramon, DigimonName.Vademon, DigimonName.Sukamon]\n    ),\n    // Shellmon\n    new Digimon(\n        DigimonName.Shellmon,\n        Level.Champion,\n        new EvolutionRequirements(1000, 0, 0, 100, 0, 0, 5, 40, 0, 0, -1, 35, false, false), \n        [DigimonName.HKabuterimon, DigimonName.MegaSeadramon, DigimonName.Vademon, DigimonName.Sukamon],\n        /* Bonus */ DigimonName.Betamon // Betamon requires the extra bonus stats\n    ),\n    // Sukamon\n    new Digimon(\n        DigimonName.Sukamon,\n        Level.Champion,\n        new EvolutionRequirements(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, false, false), \n        [DigimonName.Etemon, DigimonName.Vademon]\n    ),\n    // Tyrannomon\n    new Digimon(\n        DigimonName.Tyrannomon,\n        Level.Champion,\n        new EvolutionRequirements(1000, 0, 0, 100, 0, 0, 5, 30, 0, 0, 5, 28, true, true), \n        [DigimonName.MetalGreymon, DigimonName.Megadramon, DigimonName.Vademon, DigimonName.Sukamon]\n    ),\n    // Unimon\n    new Digimon(\n        DigimonName.Unimon,\n        Level.Champion,\n        new EvolutionRequirements(1000, 0, 0, 0, 100, 0, 3, 30, 0, 0, 10, 35, true, false), \n        [DigimonName.Giromon, DigimonName.Phoenixmon, DigimonName.Vademon, DigimonName.Sukamon]\n    ),\n    // Vegiemon\n    new Digimon(\n        DigimonName.Vegiemon,\n        Level.Champion,\n        new EvolutionRequirements(0, 1000, 0, 0, 0, 0, 5, 10, 0, 50, -1, 21, false, false), \n        [DigimonName.Piximon, DigimonName.Vademon, DigimonName.Sukamon]\n    ),\n    // Whamon\n    new Digimon(\n        DigimonName.Whamon,\n        Level.Champion,\n        new EvolutionRequirements(1000, 0, 0, 0, 0, 100, 5, 40, 60, 0, -1, 28, true, false), \n        [DigimonName.MegaSeadramon, DigimonName.Mamemon, DigimonName.Vademon, DigimonName.Sukamon]\n    ),\n    \n    // Andromon\n    new Digimon(\n        DigimonName.Andromon,\n        Level.Ultimate,\n        new EvolutionRequirements(0, 1000, 0, 0, 100, 100, 1, 30, 90, 0, -1, 35, true, false), \n        [DigimonName.Sukamon]\n    ),\n    // Digitamamon\n    new Digimon(\n        DigimonName.Digitamamon,\n        Level.Ultimate,\n        new EvolutionRequirements(3000, 3000, 400, 400, 400, 300, 0, 10, 0, 0, 100, 49, true, false), \n        [DigimonName.Sukamon]\n    ),\n    // Etemon\n    new Digimon(\n        DigimonName.Etemon,\n        Level.Ultimate,\n        new EvolutionRequirements(2000, 3000, 400, 200, 400, 300, 0, 15, 0, 0, 50, 49, true, false), \n        []\n    ),\n    // Giromon\n    new Digimon(\n        DigimonName.Giromon,\n        Level.Ultimate,\n        new EvolutionRequirements(0, 0, 400, 0, 300, 400, 15, 5, 0, 95, 100, 35, false, false), \n        [DigimonName.Sukamon]\n    ),\n    // HKabuterimon\n    new Digimon(\n        DigimonName.HKabuterimon,\n        Level.Ultimate,\n        new EvolutionRequirements(7000, 0, 400, 600, 400, 0, 5, 55, 0, 0, 0, 40, true, true), \n        [DigimonName.Sukamon]\n    ),\n    // Mamemon\n    new Digimon(\n        DigimonName.Mamemon,\n        Level.Ultimate,\n        new EvolutionRequirements(0, 0, 400, 300, 300, 400, 15, 5, 0, 90, -1, 25, false, false), \n        [DigimonName.Sukamon]\n    ),\n    // Megadramon\n    new Digimon(\n        DigimonName.Megadramon,\n        Level.Ultimate,\n        new EvolutionRequirements(3000, 5000, 500, 300, 400, 400, 10, 55, 0, 0, 30, 30, true, false), \n        [DigimonName.Sukamon]\n    ),\n    // MegaSeadramon\n    new Digimon(\n        DigimonName.MegaSeadramon,\n        Level.Ultimate,\n        new EvolutionRequirements(0, 4000, 500, 400, 0, 400, 5, 30, 0, 0, 0, 40, true, true), \n        [DigimonName.Sukamon]\n    ),\n    // MetalGreymon\n    new Digimon(\n        DigimonName.MetalGreymon,\n        Level.Ultimate,\n        new EvolutionRequirements(4000, 3000, 500, 500, 300, 300, 10, 65, 95, 0, 30, 30, true, false), \n        [DigimonName.Sukamon]\n    ),\n    // MetalMamemon\n    new Digimon(\n        DigimonName.MetalMamemon,\n        Level.Ultimate,\n        new EvolutionRequirements(0, 0, 500, 400, 400, 400, 15, 10, 0, 95, -1, 30, true, false), \n        [DigimonName.Sukamon]\n    ),\n    // Monzaemon\n    new Digimon(\n        DigimonName.Monzaemon,\n        Level.Ultimate,\n        new EvolutionRequirements(3000, 3000, 300, 300, 300, 300, 0, 40, 0, 0, 50, 49, true, false), \n        [DigimonName.Sukamon]\n    ),\n    // Phoenixmon\n    new Digimon(\n        DigimonName.Phoenixmon,\n        Level.Ultimate,\n        new EvolutionRequirements(4000, 4000, 0, 0, 400, 600, 3, 30, 100, 0, 0, 40, true, true), \n        [DigimonName.Sukamon]\n    ),\n    // Piximon\n    new Digimon(\n        DigimonName.Piximon,\n        Level.Ultimate,\n        new EvolutionRequirements(0, 0, 300, 300, 400, 400, 15, 5, 0, 95, -1, 25, false, false), \n        [DigimonName.Sukamon]\n    ),\n    // SkullGreymon\n    new Digimon(\n        DigimonName.SkullGreymon,\n        Level.Ultimate,\n        new EvolutionRequirements(4000, 6000, 400, 400, 200, 500, 10, 30, 0, 0, 40, 45, false, false), \n        [DigimonName.Sukamon]\n    ),\n    // Vademon\n    new Digimon(\n        DigimonName.Vademon,\n        Level.Ultimate,\n        new EvolutionRequirements(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, false, false), \n        []\n    ),\n]\n\nexport function getDigimon(dn: DigimonName) { \n    return digimonList.find(d => d.name === dn) as Digimon;\n}\n\nexport const getSpecialDigimonInfo = (dn: DigimonName) => {\n    switch(dn) {\n        case DigimonName.Devimon:\n            return \"Lose a battle with your Angemon while having less than 50% discipline and you'll have a chance to evolve into this digimon.\";\n        case DigimonName.Numemon:\n            return \"Make sure you don't meet the requirements for any other digimon and you'll evolve into this digimon after 96h on the Rookie level.\";\n        case DigimonName.Sukamon:\n            return \"Fill your virus bar by allowing your digimon to poop on the ground.\";\n        case DigimonName.Nanimon:\n            return \"Bring happiness and discipline to 0 and scold your Digimon. The easiest way to do so is praising/scolding and then reducing the last bit of discipline by overfeeding. The fly/flower condition will increase your happiness and prevents you from getting this evolution!\";\n        case DigimonName.Vademon:\n            return \"Make sure you don't meet the requirements for any other digimon and you can evolve into this digimon when praising/scolding your Digimon after 240h on the Champion level.\";\n        case DigimonName.Kunemon:\n            return `Sleep in the \"Kunemon's\" Bed area and you'll have a chance to evolve into this digimon.`  \n        default:\n            return false;\n    }\n};\n","import { useState } from \"react\";\nimport { Digimon, DigimonName, Level } from \"../models/Digimon\";\nimport { digimonList, getDigimon, getSpecialDigimonInfo } from \"../models/DigimonList\";\nimport { Table, Alert, Button, Form, Card }  from 'react-bootstrap';\nimport styled from \"styled-components\";\n\nconst StyledPanes = styled.div`\n    display: flex;\n    flex-direction: row;\n\n    @media screen and (max-width: 768px) {\n        flex-direction: column;\n    }\n`;\n\nconst StyledPane = styled.div`\n    flex: 50%;\n    padding: 10px;\n`;\n\nconst StyledSelect = styled(Form.Select)`\n    width: auto;\n    display: inline-block;\n    margin-bottom: 20px;\n`;\n\nconst StyledButton = styled(Button)`\n    margin-top: -5px;\n    margin-left: 10px;\n`;\n\nconst FormCheck = styled(Form.Check)`\n    -webkit-touch-callout: none;\n    -webkit-user-select: none;\n    -khtml-user-select: none;\n    -moz-user-select: none;\n    -ms-user-select: none;\n    user-select: none; \n\n    :last-child {\n        padding: 30px;\n    }\n`;\n\nconst StyledIcon = styled.img`\n    image-rendering: pixelated;\n    image-rendering: -moz-crisp-edges;\n    image-rendering: crisp-edges;\n    width: 32px;\n`;\n\nconst InfoCard = styled(Card)`\n    margin-top: 30px;\n`;\nconst StyledInput = styled(Form.Control)`\n    margin-top: 10px;\n`;\n\nexport default function DigiSlotMachine() {\n    const [careLabel, setCareLabel] = useState('');\n    const [battlesLabel, setBattlesLabel] = useState('');\n\n    const [currentDigimon, setCurrentDigimon] = useState<Digimon>(getDigimon(DigimonName.Agumon)!);\n    const [rolledDigimon, setRolledDigimon] = useState<Digimon>();\n\n    const [omitErrors, setOmitErrors] = useState<Array<string>>([]);\n    const [omittedDigimon, setOmittedDigimon] = useState<Array<DigimonName>>([]);\n    const [showOmitTags, setShowOmitTags] = useState(false);\n\n    const [showBonusDigimonText, setShowBonusDigimonText] = useState(false);\n    const [bonusText, setBonusText] = useState('');\n    const [showSpecialDigivolutions, setShowSpecialDigivolutions] = useState(false);\n    const [showSpoilers, setShowSpoilers] = useState(false);\n\n    function rollDigimon(currentDigimon: Digimon) {\n        // Clear the bonus text\n        setBonusText('');\n\n        // Filter out only the allowed evolustions\n        // Also, ignore special evos (numemon, sukamon) if it's toggled off\n        const potentialEvolutions = digimonList\n            .filter(dn => {\n                // Return false if specials are disabled and it's a special digi\n                if (!showSpecialDigivolutions && getSpecialDigimonInfo(dn.name)) {\n                    return false;\n                }\n                // Return false if digimon is specifically omitted\n                if (omittedDigimon.includes(dn.name)) {\n                    return false;\n                }\n                // Otherwise return true only if it's a valid evolution\n                return currentDigimon.evolutionPath.includes(dn.name);\n            });\n\n        // Get a random digimon from the list of valid evolutions\n        const randomDigi = potentialEvolutions[Math.floor(Math.random()*potentialEvolutions.length)];\n        \n        // If the rolled digimon has special bonus conditions, let the user know\n        if (randomDigi.digimonBonus === currentDigimon.name) {\n            setShowBonusDigimonText(true);\n        }\n        \n        // If the rolled digimon is a \"special\" digimon, let them know how to evolve into it\n        const specialDigiInfo = getSpecialDigimonInfo(randomDigi.name);\n        if (specialDigiInfo) {\n            setBonusText(`This is a special digimon. ${specialDigiInfo}`);\n        }\n\n        // Set the information for the FE\n        setRolledDigimon(randomDigi);\n\n        console.log(randomDigi);\n        console.log(\"Allowed evolutions:\", potentialEvolutions)\n\n        setBattlesLabel(randomDigi.evolutionRequirements.minBattles ? 'MIN' : 'MAX');\n        setCareLabel(randomDigi.evolutionRequirements.minCare ? 'MIN' : 'MAX');\n    }\n\n    function handleOmit(value: string) {\n        const values = value.split(',');\n        const badValues = [];\n        const goodValues = [];\n        console.log('hello');\n\n        for (const digi of values) {\n            const trimmed = digi.trim() as DigimonName;\n            if (!trimmed) continue;\n            if (!Object.values(DigimonName).includes(trimmed)) {\n                badValues.push(trimmed);\n            } else {\n                goodValues.push(trimmed);\n            }\n        }\n        if (badValues) {\n            setOmitErrors(badValues);\n        }\n        setOmittedDigimon(goodValues);\n    }\n\n    // TODO: Sort the rows and push empty values to the bottom\n    // TODO: Hover over stats for details\n    return <StyledPanes>\n        <StyledPane>\n            {showBonusDigimonText && (\n                <Alert variant=\"info\">\n                    <p>Since you're trying to evolve a {currentDigimon.name}, your digimon gets a free bonus point towards this secret digivolution!</p>\n                </Alert>\n            )}\n            {bonusText.length > 0 && <Alert variant=\"info\">{bonusText}</Alert>}\n            {rolledDigimon ? <>\n                <h2>Target Digivolution Criteria</h2>\n                <Table striped bordered hover>\n                    <tbody>\n                        <tr><th>Name</th><td>{showSpoilers ? <>{rolledDigimon?.name} <StyledIcon src={`./imgs/${rolledDigimon.name}.png`}/></> : '???'}</td></tr>\n                        <tr><th style={{ width: '30%' }}>Level</th><td style={{ width: '70%' }}>{Level[rolledDigimon.level] || '-'}</td></tr>\n                        <tr><th>HP</th><td>{rolledDigimon.evolutionRequirements.hp || '-'}</td></tr>\n                        <tr><th>MP</th><td>{rolledDigimon.evolutionRequirements.mp || '-'}</td></tr>\n                        <tr><th>OFFENSE</th><td>{rolledDigimon.evolutionRequirements.offense || '-'}</td></tr>\n                        <tr><th>DEFENSE</th><td>{rolledDigimon.evolutionRequirements.defense || '-'}</td></tr>\n                        <tr><th>SPEED</th><td>{rolledDigimon.evolutionRequirements.speed || '-'}</td></tr>\n                        <tr><th>BRAINS</th><td>{rolledDigimon.evolutionRequirements.brains || '-'}</td></tr>\n                        <tr><th>{careLabel} CARE MISTAKES</th><td>{rolledDigimon.evolutionRequirements.care || '-'}</td></tr>\n                        <tr><th>WEIGHT</th><td>{rolledDigimon.evolutionRequirements.weight || '-'}</td></tr>\n                        <tr><th>DISCIPLINE*</th><td>{rolledDigimon.evolutionRequirements.discipline || '-'}</td></tr>\n                        <tr><th>HAPPINESS*</th><td>{rolledDigimon.evolutionRequirements.happiness || '-'}</td></tr>\n                        <tr><th>{battlesLabel} BATTLES*</th><td>{rolledDigimon.evolutionRequirements.battles || '-'}</td></tr>\n                        <tr><th>TECHS*</th><td>{rolledDigimon.evolutionRequirements.techs || '-'}</td></tr>\n                        {rolledDigimon.digimonBonus && <tr><th>DIGIMON BONUS</th><td>{rolledDigimon.digimonBonus || \"N/A\"}</td></tr>}\n                    </tbody>\n                </Table>\n            </> : <p className={'text-info'}>Click the Roll button to receive a random digimon's evolution targets</p>}\n        </StyledPane>\n        <StyledPane>\n            <p>Your current Digimon: {currentDigimon && <StyledIcon src={`./imgs/${currentDigimon.name}.png`}/>}</p>\n            <StyledSelect name=\"evolutions\" value={currentDigimon.name} onChange={(e: any) => setCurrentDigimon(getDigimon(e.target.value as unknown as DigimonName))}>\n                {digimonList.map(digi => (\n                    <option key={digi.name} value={digi.name}>{Level[digi.level]} - {digi.name}</option>\n                ))}\n            </StyledSelect>\n            <StyledButton variant=\"primary\" onClick={() => rollDigimon(currentDigimon)}>Roll!</StyledButton> \n            <FormCheck \n                type=\"switch\"\n                id=\"specials-switch\"\n                label=\"Show special digimon evolutions\"\n                value={showSpecialDigivolutions}\n                onClick={() => setShowSpecialDigivolutions(prev => !prev)}\n            />\n            <FormCheck \n                type=\"switch\"\n                id=\"spoilers-switch\"\n                label=\"Show target digimon name details (spoilers!)\"\n                value={showSpoilers}\n                onClick={() => setShowSpoilers(prev => !prev)}\n            />\n            <FormCheck \n                type=\"switch\"\n                id=\"omit-switch\"\n                label=\"Ignore one or more digimon from the results\"\n                value={showSpoilers}\n                onClick={() => setShowOmitTags(prev => !prev)}\n            />\n            {showOmitTags && <>\n                <StyledInput\n                    type=\"input\"\n                    placeholder=\"e.g. Greymon, HKabuterimon, Agumon\"\n                    onBlur={(e: any) => handleOmit(e.target.value)} />\n                {omitErrors.length > 0 && <p className='text-danger'>Unable to ignore the following digimon. Are they spelled correctly?: {omitErrors.join(', ')}</p>}\n                {omittedDigimon.length > 0 && <p className='text-success'>Omitting the following digimon from results: {omittedDigimon.join(', ')}</p>}\n            </>}\n            <InfoCard body>\n                <h2>Why?</h2>\n                <p>I wanted to play through Digimon World 1, but it's an infamously challenging game which doesn't hold your hand. In a lot of ways, this is what makes the game so special, but in the case of digivolution, it can be exhausting and time-consuming getting the same awful digimon.</p>\n                <h2>Digivolution Criteria</h2>\n                <ul>\n                    <li>Digivolution outcomes are affected by four different criteria: Stats, Weight, Care Mistakes, and Bonus Criteria.</li>\n                    <ul><li>Bonus conditions can substitute one of three other criteria to Digivolve.</li></ul>\n                    <li>Stats, Care Mistakes, and Weight are worth 1 point.</li>\n                    <li>Bonus criteria are worth one point, but only the first bonus criteria counts.</li>\n                </ul>\n                <p>In-depth information about evolution <a href=\"https://gamefaqs.gamespot.com/ps/913684-digimon-world/faqs/73845\"> here</a>! Huge credit to <a href=\"https://twitter.com/sydmontague\">SydMontague</a></p>\n            </InfoCard>\n        </StyledPane>\n        \n    </StyledPanes>;\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport DigiSlotMachine from './components/DigiSlotMachine';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <div className=\"App\">\n      <h1 className='display-4'>Digimon World 1 Evolution Slot Machine</h1>\n      <p className='lead'>This is an evolution / digivolution tool for people who want to play Digimon World 1 without spoilers. Hit the button and you'll be provided random instructions for digivolving your digimon into another.</p>      <DigiSlotMachine />\n    </div>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}